//----------------------------------------------------------------------------------------------------------------------------------
//
//							Author: Sonikku
//
//                              ______
//	                      _.-*'"      "`*-._
//	                _.-*'                  `*-._
//	             .-'                            `-.
//	  /`-.    .-'                  _.              `-.
//	 :    `..'                  .-'_ .                `.
//	 |    .'                 .-'_.' \ .                 \
//	 |   /                 .' .*     ;               .-'"
//	 :   L                    `.     | ;          .-'
//	  \.' `*.          .-*"*-.  `.   ; |        .'
//	  /      \        '       `.  `-'  ;      .'
//	 : .'"`.  .       .-*'`*-.  \     .      (_
//	 |              .'        \  .             `*-.
//	 |.     .      /           ;                   `-.
//	 :    db      '       d$b  |                      `-.
//	 .   :PT;.   '       :P"T; :                         `.
//	 :   :bd;   '        :b_d; :                           \
//	 |   :$$; `'         :$$$; |                            \
//	 |    TP              T$P  '                             ;
//	 :                        /.-*'"`.                       |
//	.sdP^T$bs.               /'       \
//	$$$._.$$$$b.--._      _.'   .--.   ;
//	`*$$$$$$P*'     `*--*'     '  / \  :
//	   \                        .'   ; ;
//	    `.                  _.-'    ' /
//	      `*-.                      .'
//	          `*-._            _.-*'
//	               `*=--..--=*'
//
//
//					FILENAME: level.c
//					Purpose: PPM / VU level metering from 16-24 bit PCM digita audio
//					Dependencies:
//						1. Math libraries
//						2. Timer Tick
//
//
//
//----------------------------------------------------------------------------------------------------------------------------------

// Includes
//---------------
#include "level.h"
#include "stm32f0xx_rcc.h"					// For STM32F0xx micros

// Variables
uint32_t	DIG_AUDIO_SAMPLE;

GPIO_InitTypeDef GPIO_InitStructure;		// GPIO init struct


// Name: InitLevel
// Function: Initialize the level meter
// Parameters: void
// Returns: void
//---------------------------------------------------------------------------------
void InitMeter(void){

	// Temporary assignments - LED VU meter for debugging..
	GPIO_InitStructure.GPIO_Pin = LD1 | LD2;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
	GPIO_Init(GPIOC, &GPIO_InitStructure);
//
	GPIO_InitStructure.GPIO_Pin = LD3 | LD4 | LD5;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
	GPIO_Init(GPIOB, &GPIO_InitStructure);
	DIG_AUDIO_SAMPLE = 0;

}


// Name: ServiceMeter
// Function: Services the LED meter
// Parameters: void
// Returns: void
//----------------------------------------------
void ServiceMeter(void){



}




