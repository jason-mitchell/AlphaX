//-----------------------------------------------------------------------------------------------------------------------------
//
//									Filename: spi.c
//				Bit-banged SPI interface for micros that lack the hardware resource
//				Author: Sonic2k
//				Date: 27.08.2017
//
//				This code assumes you already configured the GPIO and defined the names in bsp.h
//-----------------------------------------------------------------------------------------------------------------------------
#include "spi.h"
#include "bsp.h"



// Local Vars, constants, etc
//----------------------------



// Functions
//----------------------------

// Name: SPITransceive
// Function: Perform a bit-banged SPI transaction on the bus
// Parameters: Byte to transmit
// Returns: Byte received from the receive channel
//-----------------------------------------------------------
unsigned char SPITransceive(unsigned char data){
	unsigned char bcnt;
	unsigned char rxd = 0;

	// shift out LSB first
	//--------------------
	for(bcnt = 0; bcnt < 8; bcnt++){
		if((data & 0x01) == 0x01){
			GPIO_SetBits(GPIOB, MOSI);		// MOSI = '1'
		} else {
			GPIO_ResetBits(GPIOB, MOSI);
		}
		data = data >> 1;

		// Clock cycle
		GPIO_SetBits(GPIOB, MCLK);			// Clock = H
		GPIO_ResetBits(GPIOB, MCLK);		// Clock = L

		rxd >>= 1;
		if(GPIO_ReadInputDataBit(GPIOB, MISO) == 1){
			rxd |= 0x80;
		} else {
			rxd &= ~0x80;
		}

	}

	return rxd;
}





