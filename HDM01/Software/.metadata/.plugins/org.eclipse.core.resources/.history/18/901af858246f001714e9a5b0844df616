//
//							Author: Sonikku
//
//                              ______
//	                      _.-*'"      "`*-._
//	                _.-*'                  `*-._
//	             .-'                            `-.
//	  /`-.    .-'                  _.              `-.
//	 :    `..'                  .-'_ .                `.
//	 |    .'                 .-'_.' \ .                 \
//	 |   /                 .' .*     ;               .-'"
//	 :   L                    `.     | ;          .-'
//	  \.' `*.          .-*"*-.  `.   ; |        .'
//	  /      \        '       `.  `-'  ;      .'
//	 : .'"`.  .       .-*'`*-.  \     .      (_
//	 |              .'        \  .             `*-.
//	 |.     .      /           ;                   `-.
//	 :    db      '       d$b  |                      `-.
//	 .   :PT;.   '       :P"T; :                         `.
//	 :   :bd;   '        :b_d; :                           \
//	 |   :$$; `'         :$$$; |                            \
//	 |    TP              T$P  '                             ;
//	 :                        /.-*'"`.                       |
//	.sdP^T$bs.               /'       \
//	$$$._.$$$$b.--._      _.'   .--.   ;
//	`*$$$$$$P*'     `*--*'     '  / \  :
//	   \                        .'   ; ;
//	    `.                  _.-'    ' /
//	      `*-.                      .'
//	          `*-._            _.-*'
//	               `*=--..--=*'
//
//
//					FILENAME: serial.c
//					Purpose: General-purpose serial port stuff
//
//
//
//-------------------------------------------------------------------------------------------------------------------------

// Includes
//----------

#include "serial.h"

// Locals
//---------------
unsigned char rcv_buffer[64];		// Main receive buffer
unsigned int rcv_ptr;				// Receive buffer pointer


//------------------------------------------------------------------------
// Name: InitSerial
// Function: Initialise serial port stuff
// Parameters: void
// Returns: void
//------------------------------------------------------------------------



//------------------------------------------------------------------------
// Name: RxIRQHandler
// Function: Receive IRQ handling routine
// Parameters: Byte Received from hardware
// Returns: void
//------------------------------------------------------------------------
void RxIRQHandler(unsigned char byte){

	if (rcv_ptr < 64){
		rcv_buffer[rcv_ptr] = byte;
		rcv_ptr++;
	}
}


 //   while(USART_GetFlagStatus(USART1, USART_FLAG_TXE) == RESET);        // Wait for Empty
 //  USART_SendData(USART1, *ptr++);                                     // Send character

